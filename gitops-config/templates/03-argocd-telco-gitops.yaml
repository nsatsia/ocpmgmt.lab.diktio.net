---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: {{ $.Values.global.servernamespace }}
  namespace: {{ $.Values.global.servernamespace }}
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
  dex:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac: {}
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
#    - apiGroups:
#      - admissionregistration.k8s.io/v1beta1
#      - apiextensions.k8s.io/v1beta1
#      - apiregistration.k8s.io/v1beta1
#      - authentication.k8s.io/v1beta1
#      - authorization.k8s.io/v1beta1
#      - autoscaling/v2beta1
#      - autoscaling/v2beta2
#      - batch/v1beta1
#      - certificates.k8s.io/v1beta1
#      - coordination.k8s.io/v1beta1
#      - discovery.k8s.io/v1beta1
#      - events.k8s.io/v1beta1
#      - networking.k8s.io/v1beta1
#      - node.k8s.io/v1beta1
#      - operators.coreos.com/v1alpha2
#      - rbac.authorization.k8s.io/v1beta1
#      - scheduling.k8s.io/v1beta1
#      - snapshot.storage.k8s.io/v1beta1
#      clusters:
#      - '*'
#      kinds:
#      - '*'
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  tls:
    ca: {}