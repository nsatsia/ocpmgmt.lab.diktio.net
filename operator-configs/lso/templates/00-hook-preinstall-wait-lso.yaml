---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-succeeded
    #helm.sh/hook-weight: "-5"
  name: preinstall-{{ $.Values.global.name }}-wait-lso-job
  namespace: {{ $.Values.gitops.namespace }}
spec:
  template:
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: {{ $.Values.gitops.service_account }}
      serviceAccountName: {{ $.Values.gitops.service_account_name }}
      terminationGracePeriodSeconds: 30
      containers:
        - image: {{ $.Values.global.hook_image }}
          imagePullPolicy: IfNotPresent
          name: {{ $.Values.global.name }}-wait-lso-job
          env:
            - name: SLEEP
              value: "3"
          command:
            - /bin/bash
            - -c
            - |
              echo "OCS PreSync Hook"
              CSV_STATUS="Pausing $SLEEP seconds..."
              while [ "$CSV_STATUS" != "InstallSucceeded" ]; do
                echo "Waiting for the AI Operator to be ready. ($CSV_STATUS)"
                sleep $SLEEP
                CSV_STATUS=$( oc get csv -n openshift-local-storage -l operators.coreos.com/local-storage-operator.openshift-local-storage='' -o jsonpath={..status.conditions[-1:].reason} )
              done
              # LABEL nodes
              {{- range $.Values.nodes }}
                {{- range . }}
                  {{- if eq .lso "true" }}
              oc label node {{ .name }}.{{ $.Values.global.name }}.{{ $.Values.global.domain }} ran.openshift.io/lso=''
                  {{- end }}
                {{- end }}
              {{- end }}
              echo "All done! Hooray!"


